package npmvuln.job

import org.apache.spark.graphx.{EdgeDirection, EdgeTriplet, Graph, VertexId}
import npmvuln.props._

object VulnerabilityScan {

//  def vprog(vertexId: VertexId, prop: VertexProperties, message: Array[VulnProperties]): VertexProperties = {
//    false
//  }
//
//  def sendMsg(triplet: EdgeTriplet[VertexProperties, EdgeProperties]): Iterator[(VertexId, Array[VulnProperties])] = {
//    triplet.attr match {
//      case SnapshotEdge(packageName, version, from, to) => {
//        val packageProp: PackageVertex = triplet.dstAttr.asInstanceOf[PackageVertex]
//        val release: PackageStateVertex = triplet.srcAttr.asInstanceOf[PackageStateVertex]
//
//        Iterator.empty
//      }
//
//      case DependsOnEdge(constraint) => {
//        val dependent: PackageStateVertex = triplet.srcAttr.asInstanceOf[PackageStateVertex]
//        val dependency: PackageVertex = triplet.dstAttr.asInstanceOf[PackageVertex]
//
//        Iterator.empty
//      }
//    }
//  }
//
//  def mergeMsg(msg1: Array[VulnProperties], msg2: Array[VulnProperties]): Array[VulnProperties] = msg1 union msg2
//
//  def run(graph: Graph[VertexProperties, EdgeProperties]): Unit = {
//    graph.pregel[Array[VulnProperties]](Array(), 100, EdgeDirection.Out)(
//      this.vprog,
//      this.sendMsg,
//      this.mergeMsg
//    )
//  }

}
